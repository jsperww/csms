<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hbsoft.csms.dao.ProcessBusinessBeanDao">
	<!-- 表名 -->
	<sql id="tableName">
		k_process_business
	</sql>
	<!-- 字段名 -->
	<sql id="fieldAll">
		业务id,业务编号,流程属性,当前节点,流程状态,创建时间,创建者,修改时间,修改者
	</sql>
	<!-- 字段名去空 -->
	<sql id="fieldTrimAll">
		RTRIM(业务id) 业务id,RTRIM(业务编号) 业务编号,RTRIM(流程属性) 流程属性,当前节点,RTRIM(流程状态) 流程状态,创建时间,RTRIM(创建者) 创建者,修改时间,RTRIM(修改者) 修改者
	</sql>
	<sql id="fieldTrimAll2">
		RTRIM(a.业务id) 业务id,RTRIM(a.业务编号) 业务编号,RTRIM(a.流程属性) 流程属性,a.当前节点,RTRIM(a.流程状态) 流程状态,a.创建时间,RTRIM(a.创建者) 创建者,a.修改时间,RTRIM(a.修改者) 修改者
	</sql>
	<resultMap id="resultMap" type="com.hbsoft.csms.bean.ProcessBusinessBean">
		<id property="id_prikey" column="id_prikey"/>
		<result property="businessId" column="业务id" />
		<result property="businessCode" column="业务编号" />
		<result property="processAttribute" column="流程属性" />
		<result property="nodeId" column="当前节点" />
		<result property="processStatus" column="流程状态" />
		<result property="createOn" column="创建时间" />
		<result property="createBy" column="创建者" />
		<result property="updateOn" column="修改时间" />
		<result property="updateBy" column="修改者" />
	</resultMap>
	<!-- 插入一条数据 -->
	<insert id="insert">
		insert into
		<include refid="tableName" />
		(
		<include refid="fieldAll" />
		)
		values(#{businessId},#{businessCode},#{processAttribute},#{nodeId},#{processStatus},#{createOn},#{createBy},#{updateOn},#{updateBy})
	</insert>
	<!-- 插入一条数据返回主键,主键在传入的对象里面 -->
	<insert id="insertPrikey">
		<selectKey resultType="Integer" order="AFTER" keyProperty="id_prikey">
          SELECT @@IDENTITY
      	</selectKey>
		insert into
		<include refid="tableName" />
		(
		<include refid="fieldAll" />
		)
		values(#{businessId},#{businessCode},#{processAttribute},#{nodeId},#{processStatus},#{createOn},#{createBy},#{updateOn},#{updateBy})
	</insert>
	<!-- 批量添加 -->
	<insert id="insertBatch">
		insert into
		<include refid="tableName" />
		(
		<include refid="fieldAll" />
		)
		values
		<foreach collection="list" item="item" index="index" separator=",">
			(#{item.businessId},#{item.businessCode},#{item.processAttribute},#{item.nodeId},#{item.processStatus},#{item.createOn},#{item.createBy},#{item.updateOn},#{item.updateBy})
		</foreach>
	</insert>
	<!-- 按给定条件删除记录 -->
	<delete id="delete">
		delete
		<include refid="tableName" />
		<where>
			<choose><when test="id_prikey!=null">and id_prikey = #{id_prikey}</when></choose>
			<choose><when test="businessId!=null">and 业务id = #{businessId}</when></choose>
			<choose><when test="businessCode!=null">and 业务编号 = #{businessCode}</when></choose>
			<choose><when test="processAttribute!=null">and 流程属性 = #{processAttribute}</when></choose>
			<choose><when test="nodeId!=null">and 当前节点 = #{nodeId}</when></choose>
			<choose><when test="processStatus!=null">and 流程状态 = #{processStatus}</when></choose>
			<choose><when test="createOn!=null">and 创建时间 = #{createOn}</when></choose>
			<choose><when test="createBy!=null">and 创建者 = #{createBy}</when></choose>
			<choose><when test="updateOn!=null">and 修改时间 = #{updateOn}</when></choose>
			<choose><when test="updateBy!=null">and 修改者 = #{updateBy}</when></choose>
		</where>
	</delete>
	<!-- 按主键删除单条记录 -->
	<delete id="deleteOne">
		delete
		<include refid="tableName" />
		where id_prikey = #{id}
	</delete>
	<!-- 按主键删除多条记录 -->
	<delete id="deleteBatch">
		delete
		<include refid="tableName" />
		where id_prikey in
		<choose>
			<when test="ids!=null&amp;&amp;ids.size()>0">
				<foreach collection="ids" index="index" item="item" open="(" separator="," close=")">
					#{item}
				</foreach>
			</when>
			<otherwise>
				(0)
			</otherwise>
		</choose>
	</delete>
	<!-- 根据主键或者外键修改记录 -->
	<update id="update">
		update
		<include refid="tableName" />
		<trim prefix="set" suffixOverrides=",">
		<if test="businessId!=null">业务id = #{businessId},</if> 
		<if test="businessCode!=null">业务编号 = #{businessCode},</if> 
		<if test="processAttribute!=null">流程属性 = #{processAttribute},</if> 
		<if test="nodeId!=null">当前节点 = #{nodeId},</if> 
		<if test="processStatus!=null">流程状态 = #{processStatus},</if> 
		<if test="createOn!=null">创建时间 = #{createOn},</if> 
		<if test="createBy!=null">创建者 = #{createBy},</if> 
		<if test="updateOn!=null">修改时间 = #{updateOn},</if> 
		<if test="updateBy!=null">修改者 = #{updateBy},</if> 
		</trim>
		<where>
			<choose><when test="id_prikey!=null">and id_prikey = #{id_prikey}</when></choose>
		</where>
	</update>
	<!-- 根据主键清空字段 -->
	<update id="updateEmpty">
		update
		<include refid="tableName" />
		<trim prefix="set" suffixOverrides=",">
		<if test="businessId!=null">业务id = NULL,</if>
		<if test="businessCode!=null">业务编号 = NULL,</if>
		<if test="processAttribute!=null">流程属性 = NULL,</if>
		<if test="nodeId!=null">当前节点 = NULL,</if>
		<if test="processStatus!=null">流程状态 = NULL,</if>
		<if test="createOn!=null">创建时间 = NULL,</if>
		<if test="createBy!=null">创建者 = NULL,</if>
		<if test="updateOn!=null">修改时间 = NULL,</if>
		<if test="updateBy!=null">修改者 = NULL,</if>
		</trim>
		<where>
			id_prikey = #{id_prikey}
		</where>
	</update>
	<!-- 根据主键查询单条记录 -->
	<select id="findById" resultMap="resultMap">
		select
		<include refid="fieldTrimAll2" />,a.id_prikey ,d.节点前置条件 precondition
		from
		<include refid="tableName" /> a
		left join k_process_detail d on a.当前节点 = d.节点

		where a.id_prikey = #{id}
	</select>
	<!-- 根据传入字段查询单条记录 -->
	<select id="findByField" resultMap="resultMap">
		select
		<include refid="fieldTrimAll2" />,a.id_prikey
		from
		<include refid="tableName" /> a
		
		<where>
			<choose><when test="id_prikey!=null">and a.id_prikey = #{id_prikey}</when></choose>
			<choose><when test="businessId!=null &amp;&amp; businessId!=''">and a.业务id = #{businessId}</when></choose>
			<choose><when test="businessCode!=null &amp;&amp; businessCode!=''">and a.业务编号 = #{businessCode}</when></choose>
			<choose><when test="processAttribute!=null &amp;&amp; processAttribute!=''">and a.流程属性 = #{processAttribute}</when></choose>
			<choose><when test="nodeId!=null">and a.当前节点 = #{nodeId}</when></choose>
			<choose><when test="processStatus!=null &amp;&amp; processStatus!=''">and a.流程状态 = #{processStatus}</when></choose>
			<choose><when test="createOn!=null">and a.创建时间 = #{createOn}</when></choose>
			<choose><when test="createBy!=null &amp;&amp; createBy!=''">and a.创建者 = #{createBy}</when></choose>
			<choose><when test="updateOn!=null">and a.修改时间 = #{updateOn}</when></choose>
			<choose><when test="updateBy!=null &amp;&amp; updateBy!=''">and a.修改者 = #{updateBy}</when></choose>
			
		</where>
	</select>

	<!-- 根据传入字段查询单条记录 -->
	<select id="findByProcessStatusDingAndBack" resultMap="resultMap">
		select
		<include refid="fieldTrimAll2" />,a.id_prikey
		from
		<include refid="tableName" /> a
		where 流程状态 in(1,3) and  a.流程属性 = #{processAttribute} and a.业务id = #{businessId}
	</select>



	<!-- 根据传入字段查询多条记录 -->
	<select id="findAll" resultMap="resultMap">
		select
		<include refid="fieldTrimAll2" />,a.id_prikey,d.项目 processAttributeName
		from
		<include refid="tableName" /> a
		left join k_process d on a.流程属性 = d.属性
		<where>
			<choose><when test="id_prikey!=null">and a.id_prikey = #{id_prikey}</when></choose>
			<choose><when test="businessId!=null &amp;&amp; businessId!=''">and a.业务id = #{businessId}</when></choose>
			<choose><when test="businessCode!=null &amp;&amp; businessCode!=''">and a.业务编号 = #{businessCode}</when></choose>
			<choose><when test="processAttribute!=null &amp;&amp; processAttribute!=''">and a.流程属性 = #{processAttribute}</when></choose>
			<choose><when test="nodeId!=null">and a.当前节点 = #{nodeId}</when></choose>
			<choose><when test="processStatus!=null &amp;&amp; processStatus!=''">and a.流程状态 = #{processStatus}</when></choose>
			<choose><when test="notProcessStatus!=null &amp;&amp; notProcessStatus!=''">and a.流程状态 != #{notProcessStatus}</when></choose>
			<choose><when test="createOn!=null">and a.创建时间 = #{createOn}</when></choose>
			<choose><when test="createBy!=null &amp;&amp; createBy!=''">and a.创建者 = #{createBy}</when></choose>
			<choose><when test="updateOn!=null">and a.修改时间 = #{updateOn}</when></choose>
			<choose><when test="updateBy!=null &amp;&amp; updateBy!=''">and a.修改者 = #{updateBy}</when></choose>
			
		</where>
	</select>

	<select id="findNotDoingAndCancelAll" resultMap="resultMap">
		select
		<include refid="fieldTrimAll2" />,a.id_prikey,d.项目 processAttributeName
		from
		<include refid="tableName" /> a
		left join k_process d on a.流程属性 = d.属性
		where a.业务编号 = #{businessCode} and  a.流程状态 not in (2,4)
	</select>


	<sql id="pagingWhere">
		<where>
			<choose><when test="id_prikey!=null">and a.id_prikey = #{id_prikey}</when></choose>
			<choose><when test="businessId!=null &amp;&amp; businessId!=''">and a.业务id like '%${businessId}%'</when></choose>
			<choose><when test="businessCode!=null &amp;&amp; businessCode!=''">and a.业务编号 like '%${businessCode}%'</when></choose>
			<choose><when test="processAttribute!=null &amp;&amp; processAttribute!=''">and a.流程属性 like '%${processAttribute}%'</when></choose>
			<choose><when test="nodeId!=null">and a.当前节点 = #{nodeId}</when></choose>
			<choose><when test="processStatus!=null &amp;&amp; processStatus!=''">and a.流程状态 like '%${processStatus}%'</when></choose>
			<choose><when test="createOn!=null">and a.创建时间 = #{createOn}</when></choose>
			<choose><when test="createBy!=null &amp;&amp; createBy!=''">and a.创建者 like '%${createBy}%'</when></choose>
			<choose><when test="updateOn!=null">and a.修改时间 = #{updateOn}</when></choose>
			<choose><when test="updateBy!=null &amp;&amp; updateBy!=''">and a.修改者 like '%${updateBy}%'</when></choose>
			
		</where>
	</sql>
	<!-- 分页获取总数 -->
	<select id="findPagingCount" resultType="Integer">
		select count(*) _row from
		<include refid="tableName" /> a
		
		<include refid="pagingWhere" />
	</select>
	<!-- 分页获取数据 -->
	<select id="findPagingData" resultMap="resultMap">
		select
		<include refid="fieldAll" />,id_prikey
		from (
		select row_number() over (order by a.id_prikey asc) RN,
		<include refid="fieldTrimAll2" />,a.id_prikey
		from
		<include refid="tableName" /> a
		
		<include refid="pagingWhere" />
		) a where RN &gt; #{start} and RN &lt;= #{end}
	</select>
	
</mapper>